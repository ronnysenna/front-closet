# Nome do Workflow
name: Deploy React App to Hostinger

# Gatilho (Trigger): Executa sempre que houver um 'push' na branch 'main'
on:
  push:
    branches:
      - main # Se sua branch principal for 'master', troque aqui.

# Trabalhos (Jobs): Tarefas a serem executadas
jobs:
  build-and-deploy:
    # A máquina virtual que executará os comandos
    runs-on: ubuntu-latest

    # Passos (Steps): A sequência de ações
    steps:
      # 1. Baixa o código do seu repositório para a máquina virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura o ambiente Node.js para instalar e compilar o projeto
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' # Pode ajustar se usar outra versão do Node
          cache: 'npm'

      # 3. Instala as dependências do projeto (o famoso 'npm install')
      - name: Install dependencies
        run: npm install

      # 4. Executa o build do projeto React. Isso cria a pasta 'build' com o site pronto.
      - name: Build React App
        run: npm run build

      # 5. Envia os arquivos da pasta 'build' para a Hostinger via FTP
      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          # Credenciais que pegamos dos Secrets que você criou no Passo 2
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}

          # Diretório de origem: A pasta 'build' que foi gerada no passo anterior
          local-dir: ./build/

          # Diretório de destino no servidor. Geralmente é 'public_html/'
          server-dir: public_html/

          # Limpa o diretório de destino antes de enviar os novos arquivos. Ótimo para remover lixo.
          cleanup: true
